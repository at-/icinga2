/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2015 Icinga Development Team (http://www.icinga.org)    *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

#include "base/configobject.hpp"
#include "base/utility.hpp"

library icinga;

namespace icinga
{

code {{{
class I2_ICINGA_API DowntimeNameComposer : public NameComposer
{
public:
	virtual String MakeName(const String& shortName, const Object::Ptr& context) const;
	virtual Dictionary::Ptr ParseName(const String& name) const;
};
}}}

class Downtime : ConfigObject < DowntimeNameComposer
{
	[config, protected, required] name(Host) host_name;
	[config, protected] String service_name;
	[config] double entry_time {
		default {{{ return Utility::GetTime(); }}}
	};
	[config, required] String author;
	[config, required] String comment;
	[config] double start_time;
	[config] double end_time;
	[state] double trigger_time;
	[config] bool fixed;
	[config] double duration;
	[state] int triggered_by_legacy_id;
	[state] String triggered_by;
	[config] String scheduled_by;
	[config] Dictionary::Ptr triggers {
		default {{{ return new Dictionary(); }}}
	};
	int legacy_id;
	[state] bool was_cancelled;
	[state] String config_owner;
};

}
